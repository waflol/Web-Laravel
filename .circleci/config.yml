version: 2.1
orbs:
  docker: circleci/docker@2.4.0
jobs:
  build:
    docker:
      - image: cimg/php:8.3-browsers
    steps:
      - checkout
      # Download and cache dependencies
      - run:
          name: "Init Temp ENV"
          command: cp .env.example .env
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: "Install dependencies"
          command: composer install

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run:
          name: Install Docker Compose
          environment:
            COMPOSE_VERSION: '1.29.2'
          command: |
            curl -L "https://github.com/docker/compose/releases/download/${COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - setup_remote_docker:
          docker_layer_caching: true
      - restore_cache:
          keys:
            - v1-docker-{{ .Branch }}
            - v1-docker-
      - run:
          name: Load Docker image layer cache
          command: |
            set +o pipefail
            docker load -i /caches/app.tar | true
      - run:
          name: "Generate environmnet file"
          command: |
            ./vendor/bin/sail up -d
            ./vendor/bin/sail artisan env:decrypt --key=${ENV_SECRET_KEY} --force
            ./vendor/bin/sail down --volumes
      - save_cache:
          key: v1-docker-{{ .Branch }}
          paths:
            - /caches/app.tar
      - run:
          name: "Run Environment"
          command: ./vendor/bin/sail up -d

  check-lint:
    docker:
      - image: cimg/php:8.3-browsers
    steps:
      - checkout
      - run:
          name: Run Check Convention
          command: ./vendor/bin/sail pint .

  test:
    docker:
      - image: cimg/php:8.3-browsers
    steps:
      - checkout
      - run:
          name: Run Unit Tests
          command: sail test

workflows:
  pipeline:
    jobs:
      - build
      - check-lint:
          requires:
            - build
      - test:
          requires:
            - build
