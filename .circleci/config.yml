version: 2.1
orbs:
  browser-tools: circleci/browser-tools@1.4.6
executors:
  backend-executor:
    docker:
      - image: cimg/php:8.3-browsers
      - image: cimg/node:21.2.0
      - image: cimg/redis:7.2
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd

jobs:
  build-and-test:
    executor: backend-executor
    environment:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: test_db
      DB_USERNAME: user
      DB_PASSWORD: passw0rd
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
      XDEBUG_MODE: coverage
    steps:
      - checkout
      - browser-tools/install-browser-tools
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: "Install dependencies"
          command: |
            sudo apt-get update
            mkdir -p /etc/apt/keyrings
            sudo apt-get install -y gnupg gosu curl ca-certificates zip unzip git supervisor sqlite3 libcap2-bin libpng-dev python2 dnsutils librsvg2-bin fswatch
            curl -sS 'https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x14aa40ec0831756756d7f66c4f4ea0aae5267a6c' | gpg --dearmor | sudo tee /etc/apt/keyrings/ppa_ondrej_php.gpg > /dev/null
            echo "deb [signed-by=/etc/apt/keyrings/ppa_ondrej_php.gpg] https://ppa.launchpadcontent.net/ondrej/php/ubuntu jammy main" > sudo /etc/apt/sources.list.d/ppa_ondrej_php.list
            sudo apt-get update
            sudo apt-get install -y php-cli php-dev php-pgsql php-sqlite3 php-gd php-imagick php-curl php-imap php-mysql php-mbstring
            sudo apt-get install -y php-xml php-zip php-bcmath php-soap php-intl php-readline php-ldap
            sudo apt-get install -y php-xml php-zip php-bcmath php-soap php-intl php-readline php-ldap
            sudo apt-get install -y php-msgpack php-igbinary php-redis php-memcached php-pcov php-xdebug
            sudo apt-get update
            composer install --dev --ignore-platform-reqs
            npm install
            npm run build
            cp /php/php.ini /etc/php/8.3/cli/conf.d/php.ini

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
            - ./node_modules
      - run:
          name: "Set up Environment"
          command: |
            cp .env.example .env
            php artisan key:generate
            cat .env
      - run:
          name: Waiting for MySQL to be ready
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Waiting for Redis primary to be ready
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: "Run Migration"
          command: php artisan migrate
      - run:
          name: "Run Tool Check Style"
          command: ./vendor/bin/pint
      - run:
          name: "Run Unit Test"
          command: |
            mkdir -p ~/phpunit
            php artisan test --coverage --log-junit ~/phpunit
      - run:
          name: "Generate Coverage Report"
          command: |
            mkdir -p ~/coverage-report
            vendor/bin/phpunit --coverage-html ~/coverage-report
      - store_test_results:
          path: ~/phpunit
      - store_artifacts:
          path: ~/coverage-report
workflows:
  pipeline:
    jobs:
      - build-and-test
