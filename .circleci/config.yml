version: 2.1

executors:
  backend-executor:
    docker:
      - image: cimg/php:8.3-browsers
      - image: cimg/redis:7.2
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: test_db
          MYSQL_USER: user
          MYSQL_PASSWORD: passw0rd

jobs:
  init-database:
    executor: backend-executor
    steps:
      - checkout
      - run: sudo apt install -y libsqlite3-dev zlib1g-dev
      - run: sudo docker-php-ext-install zip
      - run: sudo composer self-update
      - run:
          name: Mysql database
          command: mysql  -h 127.0.0.1 -u root -e "create database ${MYSQL_DB};"

  build:
    executor: backend-executor
    environment:
      DB_CONNECTION: mysql
      DB_HOST: 127.0.0.1
      DB_PORT: 3306
      DB_DATABASE: test_db
      DB_USERNAME: user
      DB_PASSWORD: passw0rd
      REDIS_HOST: 127.0.0.1
      REDIS_PASSWORD: null
      REDIS_PORT: 6379
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: "Install dependencies"
          command: composer install --dev --ignore-platform-reqs

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run:
          name: "Set up Environment"
          command: |
            cp .env.example .env
            php artisan key:generate
      - run:
          name: Waiting for MySQL to be ready
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: Waiting for Redis primary to be ready
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run:
          name: "Run Migration"
          command: |
            php artisan migrate
  test:
    executor: backend-executor
    steps:
      - run:
          name: "Run Unit Test"
          command: |
            ls
            php artisan test
  check-lint:
    executor: backend-executor
    steps:
      - run:
          name: "Run Tool Check Style"
          command: |
            ls
            ./vendor/bin/pint

workflows:
  pipeline:
    jobs:
      - build
      - check-lint:
          requires:
            - build
      - test:
          requires:
            - build
